import { useState } from "react"
import fillForm from "../assets/images/herocontactpage.png"
import { Helmet } from "react-helmet"
import TransitionEffect from "../components/TransitionEffect"
import { Layout } from '../components/Layout'
import axios from 'axios'


const Contact = () => {
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    message: ""
  });
  const [isValidated, setIsValidated] = useState(false);
  const [error, setError] = useState(null);

  function handleChange(e) {
    const { name, value } = e.target;

    setFormData({
      ...formData,
      [name]: value,
    })
  }

  function clearForm() {
    setFormData({
      name: "",
      email: "",
      message: ""
    })
  }
  const handleSubmit = async (e) => {
    e.preventDefault();
    const API_BASE_URL = process.env.REACT_APP_API_URL || "http://localhost:3000";

    try {
      const response = await axios.post(`${API_BASE_URL}api/messages`, formData);
      if (response.status === 201) {
        setIsValidated(true); //set the state to true
        clearForm();
      }
    } catch (error) {
      console.error("Error sending message:", error.response?.data || error.message);
      setError(error.response?.data?.message || "Error submitting form");
      setIsValidated(false);  
    }
  }
  return (
    <>
      <Helmet>
        <title>Contact</title>
        <meta name="description" content="Generated by create next app" />
      </Helmet>
      <TransitionEffect />
      <main className='w-full flex flex-col items-center justify-center dark:text-light'>
        <Layout className="pt-0 md:pt-16 sm:pt-8">
          <div className="flex items-center justify-between w-full lg:flex-col">

            <div className="w-1/2 md:w-full md:hidden">
              <img src={fillForm} alt="fill contact form" width={600} />
            </div>

            <div className="w-1/2 flex flex-col px-10 py-5 self-center lg:w-full lg:text-center sm:px-0">
              <h1 className="text-7xl font-bold">Contact me</h1>
              <form
                onSubmit={handleSubmit}
                className=""
              >
                <fieldset className="capitalize">
                  <div>
                    <label
                      htmlFor="name"
                    >name</label>
                  </div>
                  <div>
                    <input
                      type="text"
                      name="name"
                      value={formData.name}
                      onChange={handleChange}

                      className="border font-thin px-2 py-1 rounded-lg focus:outline-none"
                    />
                  </div>
                  <div>
                    <label
                      htmlFor="name"
                    >email</label>
                  </div>
                  <div>
                    <input
                      type="email"
                      name="email"
                      value={formData.email}
                      onChange={handleChange}

                      className="border font-thin px-2 py-1 rounded-lg focus:outline-none"
                    />
                  </div>
                  <div>
                    <label
                      htmlFor="message"
                    >message</label>
                  </div>
                  <div>
                    <textarea
                      name="message"
                      value={formData.message}
                      onChange={handleChange}

                      rows={7}
                      cols={30}

                      className="border font-thin px-2 py-1 rounded-lg focus:outline-none"
                    />
                  </div>
                  <div>
                    <button
                      type="submit"
                      className="bg-primary text-light mt-2 py-2 px-6 rounded-lg text-lg font-semibold hover:bg-light hover:text-primary border-2 border-solid hover:border-primary"
                    >
                      Submit
                    </button>
                  </div>
                </fieldset>
              </form>
              {isValidated && (
                <div className="text-green-500 mt-4">
                  <p>Message delivered!</p>
                </div>
              )}
              {error && (
                <div className="text-red-500 mt-4">
                  <p>Error while sending message. Please try sometime later!</p>
                </div>
              )}
            </div>
          </div>
        </Layout>
      </main>
    </>
  )
}

export default Contact